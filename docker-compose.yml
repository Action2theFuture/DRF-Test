version: "3"

services:
  server:
    # docekrfile 경로
    image: tree0204/drf_tuto:0.1.0
    build: ./
    volumes:
      - ./:/app
    ports:
      - 8000:8000
    networks:
      - network
    deploy:
      replicas: 3
      placement:
        constraints: [node.role==manager]
      resources:
        limits:
          memory: 20M
        reservations:
          memory: 20M
          cpus: "0.1"
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 2

  sqlite3:
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    volumes:
      - /db=./db.sqlite3
    networks:
      - network
    deploy:
      replicas: 2
      placement:
        constraints: [node.role==worker]
  prometheus:
    image: prom/prometheus:latest
    command:
      - "--web.listen-address=0.0.0.0:9099"
      - "--config.file=./prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    volumes:
      - /data/prometheus:./prometheus
      - /data/prometheus/data:./prometheus/data
    ports:
      - 9099:9099
    networks:
      - network

  Swarm_Cluster:
    image: dockersamples/visualizer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8881:8000"
    networks:
      - network
    deploy:
      replicas: 1
      placement:
        constraints: [node.role==manager]
networks:
  network:
